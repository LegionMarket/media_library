{"version":3,"sources":["media_box.js"],"names":["factory","define","amd","exports","require","jQuery","$","QorMediaBox","element","options","this","$element","extend","DEFAULTS","isPlainObject","init","$body","$document","document","Mustache","window","NAMESPACE","EVENT_CLICK","EVENT_ENABLE","EVENT_DISABLE","CLASS_CLEAR_SELECT","CLASS_SELECT_ICON","CLASS_SELECT_HINT","CLASS_PARENT","CLASS_LISTS","CLASS_ITEM","CLASS_LISTS_DATA","CLASS_BOTTOMSHEETS","CLASS_SELECTED","CLASS_CROPPER_OPTIONS","prototype","constructor","bind","on","openBottomSheets","clearSelect","syncImageCrop","e","$target","target","$selectFeild","closest","remove","updateMediaLibraryData","$parent","primaryKey","data","find","val","url","ajax","type","processData","contentType","dataType","success","console","log","$ele","BottomSheets","bottomsheetsData","$mediaLrbraryData","SELECT_MANY_SELECTED_ICON","html","SELECT_MANY_UNSELECTED_ICON","SELECT_MANY_HINT","SELECT_MEDIABOX_TEMPLATE","mediaboxUrl","open","handleSelectMany","initItems","$tr","key","$items","$trs","_this","each","filter","addClass","changeIcon","renderSelectMany","render","renderHint","getSelectedItemData","item","files","size","push","ID","Url","originalUrl","selectedNum","length","updateHint","template","prepend","$dataInput","JSON","stringify","isAdd","removeItem","$clickElement","addItem","isNewData","$template","appendTo","File","trigger","hide","$bottomsheets","formatOnSelect","formatSelectResults","formatOnSubmit","formatSubmitResults","qorSelectCore","formatResults","formatData","handleFormat","getJSON","parse","isSelected","toggleClass","hasClass","plugin","fn","$this","test","isFunction","apply","selector","call","triggerHandler"],"mappings":"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","file":"media_box.js","sourcesContent":["(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as anonymous module.\n    define(['jquery'], factory);\n  } else if (typeof exports === 'object') {\n    // Node / CommonJS\n    factory(require('jquery'));\n  } else {\n    // Browser globals.\n    factory(jQuery);\n  }\n})(function ($) {\n\n  'use strict';\n\n  var $body = $('body');\n  var $document = $(document);\n  var Mustache = window.Mustache;\n  var NAMESPACE = 'qor.medialibrary';\n  var EVENT_CLICK = 'click.' + NAMESPACE;\n  var EVENT_ENABLE = 'enable.' + NAMESPACE;\n  var EVENT_DISABLE = 'disable.' + NAMESPACE;\n  var CLASS_CLEAR_SELECT = '.qor-selected-many__remove';\n  var CLASS_SELECT_ICON = '.qor-select__select-icon';\n  var CLASS_SELECT_HINT = '.qor-selectmany__hint';\n  var CLASS_PARENT = '.qor-field__mediabox';\n  var CLASS_LISTS = '.qor-field__mediabox-list';\n  var CLASS_ITEM = '.qor-field__mediabox-item';\n  var CLASS_LISTS_DATA = '.qor-field__mediabox-data';\n  var CLASS_BOTTOMSHEETS = '.qor-bottomsheets';\n  var CLASS_SELECTED = 'is_selected';\n  var CLASS_CROPPER_OPTIONS = 'textarea.qor-file__options';\n\n\n  function QorMediaBox(element, options) {\n    this.$element = $(element);\n    this.options = $.extend({}, QorMediaBox.DEFAULTS, $.isPlainObject(options) && options);\n    this.init();\n  }\n\n  QorMediaBox.prototype = {\n    constructor: QorMediaBox,\n\n    init: function () {\n      this.bind();\n    },\n\n    bind: function () {\n      $document.on(EVENT_CLICK, '[data-mediabox-url]', this.openBottomSheets.bind(this));\n      this.$element\n        .on(EVENT_CLICK, CLASS_CLEAR_SELECT, this.clearSelect.bind(this))\n        .on('change.qor.cropper', CLASS_CROPPER_OPTIONS, this.syncImageCrop.bind(this));\n    },\n\n    clearSelect: function (e) {\n      var $target = $(e.target),\n          $selectFeild = $target.closest(CLASS_LISTS);\n\n      $target.closest('[data-primary-key]').remove();\n      this.updateMediaLibraryData($selectFeild);\n\n      return false;\n    },\n\n    syncImageCrop: function (e) {\n      var $parent = $(e.target).closest(CLASS_ITEM),\n          primaryKey = $parent.data().primaryKey,\n          data = $parent.find(CLASS_CROPPER_OPTIONS).val(),\n          url = '/admin/media_libraries/' + primaryKey;\n\n      $.ajax({\n        type: 'PUT',\n        url: url,\n        data: data,\n        processData: false,\n        contentType: false,\n        dataType: 'json',\n        success: function (data) {\n          console.log(data);\n        }\n        \n      });\n\n    },\n\n    openBottomSheets: function (e) {\n      var $ele = $(e.target).closest('[data-mediabox-url]'),\n          data = $ele.data(),\n          $parent;\n\n      this.BottomSheets = $body.data('qor.bottomsheets');\n      this.bottomsheetsData = data;\n\n      this.$parent = $parent = $ele.closest(CLASS_PARENT);\n\n      this.$selectFeild = $parent.find(CLASS_LISTS);\n      this.$mediaLrbraryData = $parent.find(CLASS_LISTS_DATA);\n\n      // select many templates\n      this.SELECT_MANY_SELECTED_ICON = $('[name=\"select-many-selected-icon\"]').html();\n      this.SELECT_MANY_UNSELECTED_ICON = $('[name=\"select-many-unselected-icon\"]').html();\n      this.SELECT_MANY_HINT = $('[name=\"select-many-hint\"]').html();\n      this.SELECT_MEDIABOX_TEMPLATE = $('[name=\"media-box-template\"]').html();\n\n      data.url = data.mediaboxUrl;\n\n      this.BottomSheets.open(data, this.handleSelectMany.bind(this));\n\n    },\n\n    initItems: function () {\n      var $selectFeild = this.$selectFeild,\n          $items = $selectFeild.find(CLASS_ITEM),\n          $trs = $(CLASS_BOTTOMSHEETS).find('tbody tr'),\n          _this = this,\n          $tr,\n          key;\n\n      $items.each(function() {\n        key = $(this).data().primaryKey;\n        $tr = $trs.filter('[data-primary-key=\"' + key + '\"]').addClass(CLASS_SELECTED);\n        _this.changeIcon($tr,true);\n      });\n    },\n\n    renderSelectMany: function (data) {\n      return Mustache.render(this.SELECT_MEDIABOX_TEMPLATE, data);\n    },\n\n    renderHint: function (data) {\n      return Mustache.render(this.SELECT_MANY_HINT, data);\n    },\n\n    getSelectedItemData: function($ele) {\n      var $selectFeild = $ele ? $ele : this.$selectFeild,\n          $items = $selectFeild.find(CLASS_ITEM),\n          files = [],\n          item;\n\n      if ($items.size()) {\n        $items.each(function() {\n          item = $(this).data();\n\n          files.push({\n            ID: item.primaryKey,\n            Url: item.originalUrl\n          });\n        });\n      }\n        \n      return {\n        files: files,\n        selectedNum: files.length\n      };\n    },\n\n    updateHint: function (data) {\n      var template;\n\n      $.extend(data, this.bottomsheetsData);\n      template = this.renderHint(data);\n\n      $(CLASS_SELECT_HINT).remove();\n      $(CLASS_BOTTOMSHEETS).find('.qor-bottomsheets__body').prepend(template);\n    },\n\n    updateMediaLibraryData: function () {\n      var $dataInput = this.$mediaLrbraryData,\n          data = this.getSelectedItemData();\n\n      $dataInput.val(JSON.stringify(data.files));\n    },\n\n    changeIcon: function ($ele, isAdd) {\n      $ele.find(CLASS_SELECT_ICON).remove();\n\n      if (isAdd) {\n        $ele.find('.qor-table--medialibrary-item').prepend(this.SELECT_MANY_SELECTED_ICON);\n      }\n\n    },\n\n    removeItem: function (data) {\n      var primaryKey = data.primaryKey;\n\n      this.$selectFeild.find('[data-primary-key=\"' + primaryKey + '\"]').remove();\n      this.changeIcon(data.$clickElement);\n    },\n\n    addItem: function (data, isNewData) {\n      var $template = $(this.renderSelectMany(data));\n\n      $template.appendTo(this.$selectFeild);\n\n      // trigger cropper function for new item\n      $template.find('.qor-file__options').val(JSON.stringify(data.File));\n      $template.trigger('enable');\n\n      if (isNewData) {\n        this.BottomSheets.hide();\n        return;\n      }\n\n      this.changeIcon(data.$clickElement, true);\n    },\n\n    handleSelectMany: function () {\n      var $bottomsheets = $(CLASS_BOTTOMSHEETS),\n          options = {\n            formatOnSelect: this.formatSelectResults.bind(this),  // render selected item after click item lists\n            formatOnSubmit: this.formatSubmitResults.bind(this)   // render new items after new item form submitted\n          };\n\n      $bottomsheets.qorSelectCore(options);\n      this.initItems();\n    },\n\n    formatSelectResults: function (data) {\n      this.formatResults(data);\n    },\n\n    formatSubmitResults: function (data) {\n      this.formatResults(data, true);\n    },\n\n    formatResults: function (data, isNewData) {\n      var url = '/admin/media_libraries/' + data.primaryKey,\n          $element = data.$clickElement,\n          _this = this,\n          formatData = data;\n\n      if (!data.File) {\n        $.getJSON(url,function(data){\n          data.File = JSON.parse(data.File);\n          $element.data(data);\n          $.extend(formatData, data);\n          _this.handleFormat(formatData, isNewData);\n        });\n      } else {\n        _this.handleFormat(formatData, isNewData);\n      }\n\n    },\n\n    handleFormat: function (data, isNewData) {\n      var $element = data.$clickElement,\n          isSelected;\n\n      if (isNewData) {\n        this.addItem(data, true);\n        return;\n      }\n\n      $element.toggleClass(CLASS_SELECTED);\n      isSelected = $element.hasClass(CLASS_SELECTED);\n\n      if (isSelected) {\n        this.addItem(data);\n      } else {\n        this.removeItem(data);\n      }\n\n      this.updateHint(this.getSelectedItemData());\n      this.updateMediaLibraryData();\n\n    }\n\n  };\n\n\n  QorMediaBox.plugin = function (options) {\n    return this.each(function () {\n      var $this = $(this);\n      var data = $this.data(NAMESPACE);\n      var fn;\n\n      if (!data) {\n        if (/destroy/.test(options)) {\n          return;\n        }\n\n        $this.data(NAMESPACE, (data = new QorMediaBox(this, options)));\n      }\n\n      if (typeof options === 'string' && $.isFunction(fn = data[options])) {\n        fn.apply(data);\n      }\n    });\n  };\n\n  $(function () {\n    var selector = '[data-toggle=\"qor.mediabox\"]';\n    $(document).\n      on(EVENT_DISABLE, function (e) {\n        QorMediaBox.plugin.call($(selector, e.target), 'destroy');\n      }).\n      on(EVENT_ENABLE, function (e) {\n        QorMediaBox.plugin.call($(selector, e.target));\n      }).\n      triggerHandler(EVENT_ENABLE);\n  });\n\n  return QorMediaBox;\n\n});\n"],"sourceRoot":"/source/"}